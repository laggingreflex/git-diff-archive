#!/usr/bin/env node

"use strict";

const fs = require("fs");
const path = require("path");
const updateNotifier = require("update-notifier");
const minimist = require("minimist");
const colors = require("colors");
const numeral = require("numeral");
const prettyBytes = require("pretty-bytes");
const Table = require("cli-table");
const gitDiffArchive = require("../");
const pkg = require("../package.json");


updateNotifier({pkg}).notify({defer: false});


const argv = minimist(process.argv.slice(2), {
  alias: {
    F: "diff-filter",
    f: "format",
    o: "output",
    p: "prefix",
    P: "no-prefix",
    b: "base",
    n: "dry-run",
    v: "verbose",
    V: "version",
    h: "help"
  },
  string: [
    "diff-filter",
    "format",
    "output",
    "prefix",
    "base",
    "_"
  ],
  boolean: [
    "dry-run",
    "no-prefix",
    "verbose",
    "help",
    "version"
  ],
  default: {
    "verbose": false,
    "dry-run": false,
    "help": false,
    "version": false
  }
});

const table = new Table({
  chars: {
    "top"         : "-",
    "top-mid"     : "-",
    "top-left"    : " ",
    "top-right"   : " ",
    "bottom"      : "-",
    "bottom-mid"  : "-",
    "bottom-left" : " ",
    "bottom-right": " ",
    "left"        : " ",
    "left-mid"    : " ",
    "mid"         : "-",
    "mid-mid"     : "+",
    "right"       : " ",
    "right-mid"   : " ",
    "middle"      : "|"
  },
  style: {
    "padding-left" : 2,
    "padding-right": 2,
    head           : ["green"],
    border         : ["gray"]
  }
});


// help
if (argv.help) {
  fs.createReadStream(__dirname + "/usage.txt").pipe(process.stdout);

// version
} else if (argv.version) {
  console.log(pkg.version);
  process.exit(0);

} else {
  // parse options
  const commits = argv._.slice();
  const commit = commits[0];
  const oldCommit = commits[1]
  const options = {};
  if (argv["diff-filter"]) options.diffFilter = argv["diff-filter"];
  if (argv.format) options.format = argv.format;
  if (argv.output) options.output = argv.output;
  if (argv.prefix) options.prefix = argv.prefix;
  if (argv["no-prefix"]) options.noPrefix = true;
  if (argv.base) options.base = argv.base;
  if (argv["dry-run"]) options.dryRun = true;
  if (argv.verbose) options.verbose = true;

  // archive
  gitDiffArchive(commit, oldCommit, options)
    .then((res) => {
      table.push(
        {"Processing Time": `${numeral(res.time).format("0,0")} ms`},
        {"Git Command"    : res.cmd},
        {"Output"         : `${res.output} (${prettyBytes(res.bytes)})`},
        {"Prefix"         : res.prefix},
        {"Base"           : res.base},
        {"Files"          : res.files.join("\n")},
        {"Exclude"        : res.exclude.join("\n")}
      );
      console.log(table.toString());
    })
    .catch((err) => {
      console.error(colors.red.bold(`[Error] ${err}`));
    });
}
